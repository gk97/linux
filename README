CMPE 283: Virtualization
Assignment 2: Instrumentation via hypercall
Assignment 3: Instrumentation via hypercall (cont’d)

Team Members: Guru Karthik (only one person)
Student ID: 015238509

CPU leaf nodes implemented in this assignment are :
	For CPUID leaf node %eax=0x4FFFFFFF:
		Return the total number of exits (all types) in %eax
		
	For CPUID leaf node %eax=0x4FFFFFFD:
		Return the number of exits for the exit number provided (on input) in %ecx

2) The assignment is about  modifying the CPUID emulation code in KVM to report back additional information  when special CPUID leaf nodes are requested
Steps followed to achieve the given goal:

System requirements: Linux machine, either VM based or on real hardware running on Intel CPU.

Initially the system is checked if it supoprts hardware assisted virtualization by running the command "cat /proc/cpuinfo". If "vmx_flags" attribute is shown in the result then it means that the system is capale of hardware assisted virtualization.

Follow all the steps from assignment 1.
Make appropriate changes to vmx.c in /linux/arch/x86/kvm/vmx and cupid.c in /linux/arch/x86/kvm in order to have track of number of exits.

Run the "make -j (number of processors) modules" command to build the kernel.

Enter into root mode: sudo bash

then run the command to package: make INSTALL_MOD_STRIP=1 modules_install && make install

Setup another Virtual Machine in the current virtual machine. Compile and Run the test program in the inner virtual machine and verify the output.


3) Comment on the frequency of exits – does the number of exits increase at a stable rate? Or are there 
more exits performed during certain VM operations? Approximately how many exits does a full VM 
boot entail?
	-> Based on the analysis of output of the test program, it is found that the number of exists do increase in a stable manner
	-> Approximately the number of exits the VM boot entails is 180520000
	
